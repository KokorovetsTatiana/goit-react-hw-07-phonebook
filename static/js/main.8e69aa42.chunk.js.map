{"version":3,"sources":["services/contactsApi.js","redux/operation.js","redux/slices/todo.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","redux/selectors.js","component/Form/formHook.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactList/ContactList.styles.jsx","component/ContactList/ContactList.jsx","component/App.js","index.js"],"names":["axios","defaults","baseURL","fetchDeleteContact","id","delete","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","newContact","contact","post","deleteContact","contactsSlice","createSlice","initialState","items","filter","isLoding","error","reducers","changeFilter","state","action","payload","extraReducers","fulfilled","status","pending","rejected","actions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Containers","styled","div","Title","h1","Container","title","children","TitleSecond","h2","Input","input","Button","button","getFilter","getIsLoading","isLoading","getContacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","selectors","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","some","toast","operation","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","useEffect","map","onClick","console","log","onDeleteContact","App","window","localStorage","setItem","JSON","stringify","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e69aa42.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61238311124d8800175682bd.mockapi.io\";\r\n\r\nexport const fetchContacts = () => {\r\n  return axios.get(\"/contacts\");\r\n};\r\n\r\nexport const fetchAddContact = (contact) => {\r\n  return axios.post(`/contacts`, contact);\r\n};\r\n\r\nexport const fetchDeleteContact = (id) => {\r\n  return axios.delete(`contacts/${id}`);\r\n};","import axios from \"axios\";\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContact,\r\n  fetchDeleteContact,\r\n} from \"../services/contactsApi.js\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://61238311124d8800175682bd.mockapi.io\";\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  \"contacts/fetchContact\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await fetchContacts();\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const newContact = { name, number };\r\n      const { data } = await fetchAddContact(newContact);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await fetchDeleteContact(id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchContact, addContact, deleteContact } from \"../operation.js\";\r\n\r\n\r\nconst contactsSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState: {\r\n    items: [],\r\n    filter: \"\",\r\n    isLoding: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    changeFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContact.fulfilled]: (state, action) => {\r\n      state.items = action.payload;\r\n      state.status = null;\r\n      state.error = null;\r\n    },\r\n    [fetchContact.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [fetchContact.rejected]: (state, action) => {\r\n      state.status = null;\r\n      state.error = \"Error\";\r\n    },\r\n    [addContact.fulfilled]: (state, action) => {\r\n      state.items = [action.payload, ...state.items];\r\n      state.status = null;\r\n      state.error = null;\r\n    },\r\n    [addContact.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n      state.error = null;\r\n    },\r\n    [addContact.rejected]: (state, action) => {\r\n      state.status = null;\r\n      state.error = \"Error\";\r\n    },\r\n    [deleteContact.fulfilled]: (state, action) => {\r\n      state.items = state.items.filter(\r\n        (contact) => contact.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changeFilter } = contactsSlice.actions;\r\n\r\nexport default contactsSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport contactsReducer from \"../redux/slices/todo\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  width: 450px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import { Containers, Title } from './Container.styles';\r\n\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title>{title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px gray;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px black;\r\n    box-shadow: 0 0 20px black(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nbackground-color: lightgray;\r\nborder: solid 2px black;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\ncolor: black;\r\n&:hover{\r\n    color: white;\r\n    background-color: blue;\r\n    border: solid 2px black;\r\n    box-shadow: 0 0 20px black(121, 224, 0, 0.5); \r\n}\r\n`","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getIsLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(selectors.getContacts);\r\n    const dispatch = useDispatch(); \r\n\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n      \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n      \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.some((contact) => contact.name === name || contact.number === number)) {\r\n            toast.error(`${name} or ${number} already in the contacts.`);\r\n            \r\n            reset();\r\n            return;\r\n        } else {\r\n            dispatch(operation.addContact({\r\n                id: uuidv4(),\r\n                name,\r\n                number,\r\n            }))\r\n            reset();\r\n        };\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}>Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}>Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button type=\"submit\">Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","import { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeFilter } from '../../redux/slices/todo';\r\nimport { selectors } from \"../../redux\";\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(selectors.getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 400px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\n display: flex;\r\n align-items: center;\r\n font-style: normal;\r\n font-weight: normal;\r\n width: 100%;\r\n margin: 0 auto;\r\n padding: 5px 5px;\r\n font-size: 16px;\r\n text-transform: capitalize;\r\n justify-content: left;\r\n & span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-weight: 600;   \r\n    &:first-of-type {      \r\n      margin-right: 10px;\r\n    }\r\n    & svg {\r\n      margin-right: 10px;     \r\n    }\r\n  }\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\ndisplay: block;\r\nmargin-left: auto;\r\npadding: 5px;\r\nwidth: 75px;\r\nbackground-color: lightgray;\r\nborder: solid 2px black;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\n&:hover{\r\n    color: white;\r\n    background-color: blue;\r\n}\r\n`","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Contact, ContactItem, BtnDelete } from './ContactList.styles';\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n\r\nconst ContactsList = () => {\r\n    const contacts = useSelector(selectors.getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => {\r\n        dispatch(operation.deleteContact(id));\r\n        console.log(id);\r\n    }\r\n    useEffect(() => {\r\n        dispatch(operation.fetchContact())\r\n    }, [dispatch])\r\n   \r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}>\r\n                    <span>\r\n                        {name}:\r\n                    </span>\r\n                    \r\n                    \r\n                    <span>{number}</span>\r\n                    <BtnDelete onClick={() => onDeleteContact(id)}>Delete</BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactsList;","import { Toaster } from \"react-hot-toast\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactList/ContactList.jsx\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getContacts } from \"../redux/selectors\";\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container title=\"My phonebook\">\n      <Toaster autoClose={4000} position=\"top-right\" />\n      <Form />\n      <h2>\n        Contacts\n      </h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}